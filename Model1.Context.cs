//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_ddbind
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVC_dropdownEntities : DbContext
    {
        public MVC_dropdownEntities()
            : base("name=MVC_dropdownEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<District_Tab> District_Tab { get; set; }
        public virtual DbSet<State_Tab> State_Tab { get; set; }
        public virtual DbSet<StudentDetails_Tab> StudentDetails_Tab { get; set; }
    
        public virtual ObjectResult<sp_districts_Result> sp_districts(Nullable<int> stid)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("stid", stid) :
                new ObjectParameter("stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_districts_Result>("sp_districts", stidParameter);
        }
    
        public virtual int sp_insert(Nullable<int> stid, Nullable<int> did, string sna, Nullable<int> sag, string sph)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("stid", stid) :
                new ObjectParameter("stid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("did", did) :
                new ObjectParameter("did", typeof(int));
    
            var snaParameter = sna != null ?
                new ObjectParameter("sna", sna) :
                new ObjectParameter("sna", typeof(string));
    
            var sagParameter = sag.HasValue ?
                new ObjectParameter("sag", sag) :
                new ObjectParameter("sag", typeof(int));
    
            var sphParameter = sph != null ?
                new ObjectParameter("sph", sph) :
                new ObjectParameter("sph", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert", stidParameter, didParameter, snaParameter, sagParameter, sphParameter);
        }
    
        public virtual ObjectResult<sp_state_Result> sp_state()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_state_Result>("sp_state");
        }
    }
}
